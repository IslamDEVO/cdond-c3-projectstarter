---
- name: "update apt packages."
  become: yes
  apt:
    update_cache: yes

- name: "upgrade packages"
  become: yes
  apt:
    upgrade: yes
    
- name: remove dependencies that are no longer required
  become: yes
  apt:
    autoremove: yes

- name: "Creates backend app directory"
  file:
    path: ~/backend-app
    state: directory

- name: "Unarchive backend files"
  unarchive:
    src: artifact.tar.gz
    dest: ~/backend-app

- name: "Executing node"
  shell: |
    cd ~/backend-app
    echo {{ lookup('env', 'TYPEORM_CONNECTION') }}
    echo "ENVIRONMENT = production" > .env
    echo TYPEORM_CONNECTION= {{ lookup('env', 'TYPEORM_CONNECTION') }} >> .env
    echo TYPEORM_ENTITIES= {{ lookup('env', 'TYPEORM_ENTITIES') }} >> .env
    echo TYPEORM_HOST= {{ lookup('env', 'TYPEORM_HOST') }} >> .env
    echo TYPEORM_PORT= {{ lookup('env', 'TYPEORM_PORT') }} >> .env
    echo TYPEORM_USERNAME= {{ lookup('env', 'TYPEORM_USERNAME') }} >> .env
    echo TYPEORM_PASSWORD= {{ lookup('env', 'TYPEORM_PASSWORD') }} >> .env
    echo TYPEORM_DATABASE= {{ lookup('env', 'TYPEORM_DATABASE') }} >> .env
    cat .env
    npm i
    npm run build
    pm2 start --no-autorestart npm -- start

# - name: "Executing Node app with PM2"
#   shell: |
#     cd ~/backend-app/dist
#     pm2 stop default
#     pm2 start main.js
#   register: execute_node

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   become: true 
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu